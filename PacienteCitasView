/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Models.SesionUsuario;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;

import javax.swing.SpinnerDateModel;

/**
 *
 * @author User
 */


public class PacienteCitasView extends javax.swing.JFrame {
    Escalar escalar = new Escalar();
    public static int idUsuarioLogueado;
    int xMouse, yMouse;
    /**
     * Creates new form GestionPacienteView
     */
    public PacienteCitasView() {
        initComponents();
        
        
        
        CConexion objetoConexion = new CConexion();
        objetoConexion.establecerConexion();
        
        setLocationRelativeTo(null);
        
        escalar.escalarLabel(Logo,"/images/Loayza.png");
        
         // Configurar el modelo del Spinner para manejar fechas
        SpinnerDateModel modeloFecha = new SpinnerDateModel();
        SpinnerDia.setModel(modeloFecha);
        JSpinner.DateEditor editorFecha = new JSpinner.DateEditor(SpinnerDia, "dd-MM-yyyy");
        SpinnerDia.setEditor(editorFecha);
        SpinnerHora.setModel(modeloFecha);
        JSpinner.DateEditor editorHora = new JSpinner.DateEditor(SpinnerHora, "HH:mm ");
        SpinnerHora.setEditor(editorHora);
        
        AreaDescripcion.setLineWrap(true); // Habilita el ajuste de líneas largas
        AreaDescripcion.setWrapStyleWord(true); // Ajusta el texto respetando palabras completas
        AreaDescripcion.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.GRAY)); 
                    
        

        pack(); // Ajustar el tamaño del JFrame automáticamente
    }
    
    /*
    private boolean validarHora(String hora) {
        SimpleDateFormat formato = new SimpleDateFormat("HH:mm");
        formato.setLenient(false); // No permite valores inválidos
        try {
        formato.parse(hora); // Intenta parsear el texto ingresado
        return true;
        } catch (ParseException e) {
                return false; // Si no puede parsear, el formato es inválido
        }
    }
    */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
    // Configurar el modelo del JSpinner para manejar fechas y horas
    SpinnerDateModel model = new SpinnerDateModel();
    SpinnerHora.setModel(model);

    // Configurar el editor para mostrar solo horas y minutos en formato "HH:mm"
    JSpinner.DateEditor editor = new JSpinner.DateEditor(SpinnerHora, "HH:mm");
    SpinnerHora.setEditor(editor);

    // Establecer la hora actual como valor inicial
    SpinnerHora.setValue(new java.util.Date());
}
    /* 
    public String StrToHtml(String ){ //Solo vamos a colocar a codigo HTML para realizar la etiqueta en donde nos permite hacer formato multilinea
        return  "<html><p>" + " " + "</p></html> "; // <P> ES etiqueta HTML, y <html>Etiqueta HTML
    }
   /*
    // Evento cuando la ventana se abre
private void formWindowOpened(java.awt.event.WindowEvent evt) {
    // Configurar el modelo del JSpinner para manejar fechas
    SpinnerDateModel modeloFecha = new SpinnerDateModel();
    SpinnerDia.setModel(modeloFecha);

    // Configurar el editor para mostrar fechas en formato "dd-MM-yyyy"
    JSpinner.DateEditor editorFecha = new JSpinner.DateEditor(SpinnerDia, "dd-MM-yyyy");
    SpinnerDia.setEditor(editorFecha);

    // Configurar el modelo del JSpinner para manejar horas
    SpinnerDateModel modeloHora = new SpinnerDateModel();
    SpinnerHora.setModel(modeloHora);

    // Configurar el editor para mostrar horas en formato "HH:mm"
    JSpinner.DateEditor editorHora = new JSpinner.DateEditor(SpinnerHora, "HH:mm");
    SpinnerHora.setEditor(editorHora);
}
    */
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        JTittle = new javax.swing.JLabel();
        JTipo = new javax.swing.JLabel();
        JEspecialidad = new javax.swing.JLabel();
        JHora = new javax.swing.JLabel();
        BoxEspecialidad = new javax.swing.JComboBox<>();
        JDia = new javax.swing.JLabel();
        SpinnerDia = new javax.swing.JSpinner();
        SpinnerHora = new javax.swing.JSpinner();
        BoxTipo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        JGuardar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Head = new javax.swing.JPanel();
        Exit = new javax.swing.JPanel();
        ExitTxt = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        AreaDescripcion = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JTittle.setFont(new java.awt.Font("Roboto", 0, 48)); // NOI18N
        JTittle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JTittle.setText("AGREGAR CITA");
        jPanel1.add(JTittle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 340, 70));

        JTipo.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        JTipo.setText("Tipo");
        jPanel1.add(JTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, -1, -1));

        JEspecialidad.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        JEspecialidad.setText("Especialidad");
        jPanel1.add(JEspecialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        JHora.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        JHora.setText("Hora");
        jPanel1.add(JHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, -1));

        BoxEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medicina General", "Pediatría", "Ginecología y Obstetricia", "Cardiología", "Dermatología", "Neurología", "Psiquiatría o Psicología", "Traumatología y Ortopedia", "Endocrinología", "Oftalmología", "Otorrinolaringología", "Gastroenterología", "Urología", "Oncología", "Neumología" }));
        BoxEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxEspecialidadActionPerformed(evt);
            }
        });
        jPanel1.add(BoxEspecialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 190, 30));

        JDia.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        JDia.setText("Dia");
        jPanel1.add(JDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        SpinnerDia.setModel(new javax.swing.SpinnerNumberModel(0, 0, 30, 1));
        jPanel1.add(SpinnerDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

        SpinnerHora.setModel(new javax.swing.SpinnerNumberModel());
        jPanel1.add(SpinnerHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, -1, -1));

        BoxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Examen", "Operación", "Consulta" }));
        BoxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxTipoActionPerformed(evt);
            }
        });
        jPanel1.add(BoxTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, 220, 30));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        JGuardar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        JGuardar.setForeground(new java.awt.Color(255, 255, 255));
        JGuardar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JGuardar.setText("Guardar");
        JGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JGuardarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(JGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(JGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 210, 40));

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel1.setText("Descripcion");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, -1, -1));

        Head.setBackground(new java.awt.Color(51, 51, 51));
        Head.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                HeadMouseDragged(evt);
            }
        });
        Head.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HeadMousePressed(evt);
            }
        });

        Exit.setBackground(new java.awt.Color(51, 51, 51));

        ExitTxt.setBackground(new java.awt.Color(51, 51, 51));
        ExitTxt.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        ExitTxt.setForeground(new java.awt.Color(255, 255, 255));
        ExitTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ExitTxt.setText("X");
        ExitTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ExitTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitTxtMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ExitTxtMousePressed(evt);
            }
        });

        javax.swing.GroupLayout ExitLayout = new javax.swing.GroupLayout(Exit);
        Exit.setLayout(ExitLayout);
        ExitLayout.setHorizontalGroup(
            ExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ExitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        ExitLayout.setVerticalGroup(
            ExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ExitTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout HeadLayout = new javax.swing.GroupLayout(Head);
        Head.setLayout(HeadLayout);
        HeadLayout.setHorizontalGroup(
            HeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeadLayout.createSequentialGroup()
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 548, Short.MAX_VALUE))
        );
        HeadLayout.setVerticalGroup(
            HeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(Head, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 20));

        Logo.setText("jLabel2");
        jPanel1.add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, 140, 130));

        AreaDescripcion.setColumns(20);
        AreaDescripcion.setRows(5);
        AreaDescripcion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(AreaDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, -1, 120));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void BoxTipoActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void BoxEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void ExitTxtMouseClicked(java.awt.event.MouseEvent evt) {                                     
        System.exit(0);
    }                                    

    private void ExitTxtMouseEntered(java.awt.event.MouseEvent evt) {                                     
        Exit.setBackground(Color.red);
    }                                    

    private void ExitTxtMouseExited(java.awt.event.MouseEvent evt) {                                    
        Exit.setBackground(new Color(51,51,51));
    }                                   

    private void ExitTxtMousePressed(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void HeadMouseDragged(java.awt.event.MouseEvent evt) {                                  
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }                                 

    private void HeadMousePressed(java.awt.event.MouseEvent evt) {                                  
        xMouse = evt.getX();
        yMouse = evt.getY();
    }                                 

    private void JGuardarMouseClicked(java.awt.event.MouseEvent evt) {                                      
    // Capturar datos ingresados por el usuario
    String especialidad = BoxEspecialidad.getSelectedItem().toString(); // Especialidad seleccionada
    String tipo = BoxTipo.getSelectedItem().toString(); // Tipo seleccionado
    String Descripcion = AreaDescripcion.getText(); // Descripción ingresada desde el JTextArea

    // Validar si algún campo está vacío
    if (especialidad.isEmpty() || tipo.isEmpty() || Descripcion.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this,
            "Debe completar todos los campos.",
            "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        return; // Salir para evitar la inserción
    }

    // Obtener el valor del spinner configurado con SpinnerDateModel
    Date fecha = (Date) SpinnerDia.getValue();
    java.sql.Date sqlFecha = new java.sql.Date(fecha.getTime()); // Convertir a tipo SQL DATE

    // Obtener el valor del SpinnerHora como hora
    Date horaDate = (Date) SpinnerHora.getValue();
    java.sql.Time sqlHora = new java.sql.Time(horaDate.getTime()); // Convertir a tipo SQL TIME

    // Usar el idUsuarioLogueado (asumido que es una variable global en la clase)
    int idUsuario = SesionUsuario.getIdUsuarioLogueado();  // Obtienes el idUsuario del usuario logueado-------------------------------
    

    // Crear una instancia de la clase CConexion para establecer la conexión con la base de datos
    CConexion objetoConexion = new CConexion();
    Connection conn = objetoConexion.establecerConexion();

    if (conn != null) {
        try {
            // Consulta SQL para insertar los datos de la cita en la tabla Citas
            
            String sql = "INSERT INTO Citas (Especialidad, Tipo, Dia, Hora, Descripcion, idUsuario) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = conn.prepareStatement(sql);

            // Asignar valores a los parámetros
            pst.setString(1, especialidad);  // Especialidad
            pst.setString(2, tipo);          // Tipo
            pst.setDate(3, sqlFecha);        // Fecha (formato SQL)
            pst.setTime(4, sqlHora);         // Hora (formato SQL)
            pst.setString(5, Descripcion);   // Descripción obtenida del JTextArea
            pst.setInt(6, idUsuario);        // Asignar el idUsuario logueado a la cita

            // Ejecutar la consulta de inserción
            int filasAfectadas = pst.executeUpdate();

            // Validar si la inserción fue exitosa
            if (filasAfectadas > 0) {
                javax.swing.JOptionPane.showMessageDialog(this,
                    "¡Cita registrada con éxito!",
                    "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Hubo un error al registrar la cita.",
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

            // Cerrar conexiones
            pst.close();
            conn.close();

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Error al procesar la consulta: " + e.getMessage(),
                "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    } else {
        javax.swing.JOptionPane.showMessageDialog(this,
            "No se pudo establecer conexión con la base de datos.",
            "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }                                     
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PacienteCitasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PacienteCitasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PacienteCitasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PacienteCitasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PacienteCitasView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextArea AreaDescripcion;
    private javax.swing.JComboBox<String> BoxEspecialidad;
    private javax.swing.JComboBox<String> BoxTipo;
    private javax.swing.JPanel Exit;
    private javax.swing.JLabel ExitTxt;
    private javax.swing.JPanel Head;
    private javax.swing.JLabel JDia;
    private javax.swing.JLabel JEspecialidad;
    private javax.swing.JLabel JGuardar;
    private javax.swing.JLabel JHora;
    private javax.swing.JLabel JTipo;
    private javax.swing.JLabel JTittle;
    private javax.swing.JLabel Logo;
    private javax.swing.JSpinner SpinnerDia;
    private javax.swing.JSpinner SpinnerHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration                   
}
